stages:
  - build
  - test
  - release image
#  - scan image
#  - slim image
#  - staging
  - deploy

default:
  image: openjdk:17-slim

variables:
  DOCKER_NAME: gof-back
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dstyle.color=always"

cache:
  - key: cache_maven
    paths:
      - .m2

.login_docker_hub:
  image: docker:stable
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_BUILDKIT: 1
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

.login_ssh:
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_TARGET >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh $SSH_USER@$SSH_TARGET "hostname"

build-job:
  stage: build
  tags:
    - vps #tag to vps runner
  script:
#    - echo $CI_DEFAULT_BRANCH
    - apt-get update && apt-get install -y maven
    - mvn ${MAVEN_OPTS} -B clean test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
#  except:
#    changes:
#      - "*.md" #you don't want to run pipeline if it's not contains changes in readme
##      - ".gitlab-ci.*"

test-job:
  stage: test
  needs:
    - build-job
  tags:
    - vps #tag to vps runner
  script:
    - apt-get update && apt-get install -y maven
    - mvn ${MAVEN_OPTS} -Drevision=x.y.z-SUFFIX -DskipTests -B clean install
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - target/*.jar
    expire_in: 7 days

build_docker_job:
  stage: release image
  tags:
    - vps
  needs:
    - build-job
    - test-job
  extends:
    - .login_docker_hub
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "merge_request_event"
      allow_failure: false

deploy-job:
  stage: deploy
  needs:
    - build-job
    - test-job
    - build_docker_job
  tags:
    - vps
  image: docker:stable
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_BUILDKIT: 1
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_TARGET >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh $SSH_USER@$SSH_TARGET "hostname"
    - ssh $SSH_USER@$SSH_TARGET "docker ps"
    - DOCKER_ID=$(ssh $SSH_USER@$SSH_TARGET "docker ps -a -q -f name=$DOCKER_NAME")
    - echo $DOCKER_ID
    - ssh $SSH_USER@$SSH_TARGET "docker stop $DOCKER_ID"
    - ssh $SSH_USER@$SSH_TARGET "echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY"
    - ssh $SSH_USER@$SSH_TARGET "docker rm $DOCKER_ID || true"
    - echo $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - IMAGE_ID=$(ssh $SSH_USER@$SSH_TARGET "docker image ls -q --filter 'reference=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG'")
    - echo $IMAGE_ID
    - ssh $SSH_USER@$SSH_TARGET "docker rmi $IMAGE_ID || true"
    - ssh $SSH_USER@$SSH_TARGET "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - ssh $SSH_USER@$SSH_TARGET "docker run -d --name $DOCKER_NAME -p 8081:8081 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "merge_request_event"
  environment: production